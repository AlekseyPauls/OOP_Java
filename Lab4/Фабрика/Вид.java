import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.ImageIcon;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.*;
import java.util.Hashtable;

public class Вид {
    private Фабрика фабрика;
    private JFrame frame;
    private JPanel панельПоставки;
    public Вид(Фабрика фаб) {
        фабрика = фаб;
    }

    public void старт() {
        Border чернаяГраница = BorderFactory.createLineBorder(Color.black, 1);
        Font оченьБольшойШрифт = new Font("Serif", Font.BOLD, 26);
        Font большойШрифт = new Font("Serif", Font.BOLD, 20);
        Font среднийШрифт = new Font("", Font.BOLD, 14);
        Font маленькийШрифт = new Font("", Font.ROMAN_BASELINE, 14);

        панельПоставки = new JPanel();
        панельПоставки.setLayout(new GridLayout(5, 4));
        JLabel деталь = new JLabel(" Деталь ");
        деталь.setFont(среднийШрифт);
        деталь.setBorder(чернаяГраница);
        панельПоставки.add(деталь);
        JLabel поставщики = new JLabel(" Поставщики ");
        поставщики.setFont(среднийШрифт);
        поставщики.setBorder(чернаяГраница);
        панельПоставки.add(поставщики);
        JLabel произведено = new JLabel(" Произведено ");
        произведено.setFont(среднийШрифт);
        произведено.setBorder(чернаяГраница);
        панельПоставки.add(произведено);
        JLabel скоростьПоставки = new JLabel(" Скорость ");
        скоростьПоставки.setFont(среднийШрифт);
        скоростьПоставки.setBorder(чернаяГраница);
        панельПоставки.add(скоростьПоставки);
        JLabel мотор = new JLabel(" Мотор ");
        мотор.setFont(маленькийШрифт);
        мотор.setBorder(чернаяГраница);
        панельПоставки.add(мотор);
        JLabel поставщикиМоторов = new JLabel();
        поставщикиМоторов.setFont(маленькийШрифт);
        поставщикиМоторов.setBorder(чернаяГраница);
        панельПоставки.add(поставщикиМоторов);
        JLabel произведеноМоторов = new JLabel();
        произведеноМоторов.setFont(маленькийШрифт);
        произведеноМоторов.setBorder(чернаяГраница);
        панельПоставки.add(произведеноМоторов);
        JLabel скоростьПоставкиМоторов = new JLabel();
        скоростьПоставкиМоторов.setFont(маленькийШрифт);
        скоростьПоставкиМоторов.setBorder(чернаяГраница);
        панельПоставки.add(скоростьПоставкиМоторов);
        JLabel кузов = new JLabel(" Кузов ");
        кузов.setFont(маленькийШрифт);
        кузов.setBorder(чернаяГраница);
        панельПоставки.add(кузов);
        JLabel поставщикиКузовов = new JLabel();
        поставщикиКузовов.setFont(маленькийШрифт);
        поставщикиКузовов.setBorder(чернаяГраница);
        панельПоставки.add(поставщикиКузовов);
        JLabel произведеноКузовов = new JLabel();
        произведеноКузовов.setFont(маленькийШрифт);
        произведеноКузовов.setBorder(чернаяГраница);
        панельПоставки.add(произведеноКузовов);
        JLabel скоростьПоставкиКузовов = new JLabel();
        скоростьПоставкиКузовов.setFont(маленькийШрифт);
        скоростьПоставкиКузовов.setBorder(чернаяГраница);
        панельПоставки.add(скоростьПоставкиКузовов);
        JLabel аксессуар = new JLabel(" Аксессуар ");
        аксессуар.setFont(маленькийШрифт);
        аксессуар.setBorder(чернаяГраница);
        панельПоставки.add(аксессуар);
        JLabel поставщикиАксессуаров = new JLabel();
        поставщикиАксессуаров.setFont(маленькийШрифт);
        поставщикиАксессуаров.setBorder(чернаяГраница);
        панельПоставки.add(поставщикиАксессуаров);
        JLabel произведеноАксессуаров = new JLabel();
        произведеноАксессуаров.setFont(маленькийШрифт);
        произведеноАксессуаров.setBorder(чернаяГраница);
        панельПоставки.add(произведеноАксессуаров);
        JLabel скоростьПоставкиАксессуаров = new JLabel();
        скоростьПоставкиАксессуаров.setFont(маленькийШрифт);
        скоростьПоставкиАксессуаров.setBorder(чернаяГраница);
        панельПоставки.add(скоростьПоставкиАксессуаров);

        JPanel панельСкладовДеталей = new JPanel();
        панельСкладовДеталей.setLayout(new GridLayout(4, 3));
        JLabel детальНаСкладе = new JLabel(" Склад ");
        детальНаСкладе.setFont(среднийШрифт);
        детальНаСкладе.setBorder(чернаяГраница);
        панельСкладовДеталей.add(детальНаСкладе);
        JLabel текущееКоличествоДеталей = new JLabel(" Текущее кол-во ");
        текущееКоличествоДеталей.setFont(среднийШрифт);
        текущееКоличествоДеталей.setBorder(чернаяГраница);
        панельСкладовДеталей.add(текущееКоличествоДеталей);
        JLabel максимальноеКоличествоДеталей = new JLabel(" Макс. ");
        максимальноеКоличествоДеталей.setFont(среднийШрифт);
        максимальноеКоличествоДеталей.setBorder(чернаяГраница);
        панельСкладовДеталей.add(максимальноеКоличествоДеталей);
        JLabel складМоторов = new JLabel(" Склад моторов ");
        складМоторов.setFont(маленькийШрифт);
        складМоторов.setBorder(чернаяГраница);
        панельСкладовДеталей.add(складМоторов);
        JLabel текущееКоличествоМоторов = new JLabel();
        текущееКоличествоМоторов.setFont(маленькийШрифт);
        текущееКоличествоМоторов.setBorder(чернаяГраница);
        панельСкладовДеталей.add(текущееКоличествоМоторов);
        JLabel максимальноеКоличествоМоторов = new JLabel();
        максимальноеКоличествоМоторов.setFont(маленькийШрифт);
        максимальноеКоличествоМоторов.setBorder(чернаяГраница);
        панельСкладовДеталей.add(максимальноеКоличествоМоторов);
        JLabel складКузовов = new JLabel(" Склад кузовов ");
        складКузовов.setFont(маленькийШрифт);
        складКузовов.setBorder(чернаяГраница);
        панельСкладовДеталей.add(складКузовов);
        JLabel текущееКоличествоКузовов = new JLabel();
        текущееКоличествоКузовов.setFont(маленькийШрифт);
        текущееКоличествоКузовов.setBorder(чернаяГраница);
        панельСкладовДеталей.add(текущееКоличествоКузовов);
        JLabel максимальноеКоличествоКузовов = new JLabel();
        максимальноеКоличествоКузовов.setFont(маленькийШрифт);
        максимальноеКоличествоКузовов.setBorder(чернаяГраница);
        панельСкладовДеталей.add(максимальноеКоличествоКузовов);
        JLabel складАксессуаров = new JLabel(" Склад аксессуаров ");
        складАксессуаров.setFont(маленькийШрифт);
        складАксессуаров.setBorder(чернаяГраница);
        панельСкладовДеталей.add(складАксессуаров);
        JLabel текущееКоличествоАксессуаров = new JLabel();
        текущееКоличествоАксессуаров.setFont(маленькийШрифт);
        текущееКоличествоАксессуаров.setBorder(чернаяГраница);
        панельСкладовДеталей.add(текущееКоличествоАксессуаров);
        JLabel максимальноеКоличествоАксессуаров = new JLabel();
        максимальноеКоличествоАксессуаров.setFont(маленькийШрифт);
        максимальноеКоличествоАксессуаров.setBorder(чернаяГраница);
        панельСкладовДеталей.add(максимальноеКоличествоАксессуаров);

        JPanel панельСборки = new JPanel();
        панельСборки.setLayout(new GridLayout(2, 2));
        JLabel всегоСборщиков = new JLabel(" Всего сборщиков ");
        всегоСборщиков.setFont(среднийШрифт);
        всегоСборщиков.setBorder(чернаяГраница);
        панельСборки.add(всегоСборщиков);
        JLabel всегоПроизведено = new JLabel(" Всего произведено ");
        всегоПроизведено.setFont(среднийШрифт);
        всегоПроизведено.setBorder(чернаяГраница);
        панельСборки.add(всегоПроизведено);
        JLabel сборщики = new JLabel();
        сборщики.setFont(маленькийШрифт);
        сборщики.setBorder(чернаяГраница);
        панельСборки.add(сборщики);
        JLabel всегоПроизведеноМашин = new JLabel("");
        всегоПроизведеноМашин.setFont(маленькийШрифт);
        всегоПроизведеноМашин.setBorder(чернаяГраница);
        панельСборки.add(всегоПроизведеноМашин);

        JPanel панельСкладаМашин = new JPanel();
        панельСкладаМашин.setLayout(new GridLayout(2, 2));
        JLabel текущееКоличество = new JLabel(" Текущее кол-во ");
        текущееКоличество.setFont(среднийШрифт);
        текущееКоличество.setBorder(чернаяГраница);
        панельСкладаМашин.add(текущееКоличество);
        JLabel максимальноеКоличество = new JLabel(" Максимальное кол-во ");
        максимальноеКоличество.setFont(среднийШрифт);
        максимальноеКоличество.setBorder(чернаяГраница);
        панельСкладаМашин.add(максимальноеКоличество);
        JLabel текущееКоличествоМашин = new JLabel();
        текущееКоличествоМашин.setFont(маленькийШрифт);
        текущееКоличествоМашин.setBorder(чернаяГраница);
        панельСкладаМашин.add(текущееКоличествоМашин);
        JLabel максимальноеКоличествоМашин = new JLabel();
        максимальноеКоличествоМашин.setFont(маленькийШрифт);
        максимальноеКоличествоМашин.setBorder(чернаяГраница);
        панельСкладаМашин.add(максимальноеКоличествоМашин);

        JPanel панельПродажи = new JPanel();
        панельПродажи.setLayout(new GridLayout(2, 3));
        JLabel всегоПродавцов = new JLabel(" Продавцы ");
        всегоПродавцов.setFont(среднийШрифт);
        всегоПродавцов.setBorder(чернаяГраница);
        панельПродажи.add(всегоПродавцов);
        JLabel всегоПродано = new JLabel(" Продано ");
        всегоПродано.setFont(среднийШрифт);
        всегоПродано.setBorder(чернаяГраница);
        панельПродажи.add(всегоПродано);
        JLabel скоростьПродажи = new JLabel(" Скорость ");
        скоростьПродажи.setFont(среднийШрифт);
        скоростьПродажи.setBorder(чернаяГраница);
        панельПродажи.add(скоростьПродажи);
        JLabel количествоПродавцов = new JLabel("");
        количествоПродавцов.setFont(маленькийШрифт);
        количествоПродавцов.setBorder(чернаяГраница);
        панельПродажи.add(количествоПродавцов);
        JLabel проданоМашин = new JLabel();
        проданоМашин.setFont(маленькийШрифт);
        проданоМашин.setBorder(чернаяГраница);
        панельПродажи.add(проданоМашин);
        JLabel скоростьПродажиМашин = new JLabel();
        скоростьПродажиМашин.setFont(маленькийШрифт);
        скоростьПродажиМашин.setBorder(чернаяГраница);
        панельПродажи.add(скоростьПродажиМашин);

        //Create the slider
        Hashtable метки1 = new Hashtable();
        метки1.put( new Integer( ПоставщикДеталей.минСкорость ), new JLabel(Integer.toString(ПоставщикДеталей.минСкорость)));
        метки1.put( new Integer( ПоставщикДеталей.максСкорость ), new JLabel(Integer.toString(ПоставщикДеталей.максСкорость)));
        JSlider скоростьПроизводстваМоторов = new JSlider(JSlider.HORIZONTAL, ПоставщикДеталей.минСкорость,
                ПоставщикДеталей.максСкорость, (ПоставщикДеталей.максСкорость - ПоставщикДеталей.минСкорость)/2);
        скоростьПроизводстваМоторов.addChangeListener(new регПроизвМоторов());
        скоростьПроизводстваМоторов.setMajorTickSpacing(ПоставщикДеталей.максСкорость / 10);
        скоростьПроизводстваМоторов.setPaintTicks(true);
        скоростьПроизводстваМоторов.setLabelTable( метки1 );
        скоростьПроизводстваМоторов.setPaintLabels(true);

        JSlider скоростьПроизводстваКузовов = new JSlider(JSlider.HORIZONTAL, ПоставщикДеталей.минСкорость,
                ПоставщикДеталей.максСкорость, (ПоставщикДеталей.максСкорость - ПоставщикДеталей.минСкорость)/2);
        скоростьПроизводстваКузовов.addChangeListener(new регПроизвКузовов());
        скоростьПроизводстваКузовов.setMajorTickSpacing(ПоставщикДеталей.максСкорость / 10);
        скоростьПроизводстваКузовов.setPaintTicks(true);
        скоростьПроизводстваКузовов.setLabelTable( метки1 );
        скоростьПроизводстваКузовов.setPaintLabels(true);

        JSlider скоростьПроизводстваАксессуаров = new JSlider(JSlider.HORIZONTAL, ПоставщикДеталей.минСкорость,
                ПоставщикДеталей.максСкорость, (ПоставщикДеталей.максСкорость - ПоставщикДеталей.минСкорость)/2);
        скоростьПроизводстваАксессуаров.addChangeListener(new регПроизвАксессуаров());
        скоростьПроизводстваАксессуаров.setMajorTickSpacing(ПоставщикДеталей.максСкорость / 10);
        скоростьПроизводстваАксессуаров.setPaintTicks(true);
        скоростьПроизводстваАксессуаров.setLabelTable( метки1 );
        скоростьПроизводстваАксессуаров.setPaintLabels(true);

        JSlider скоростьПродМашин = new JSlider(JSlider.HORIZONTAL, Продавец.минСкорость,
                Продавец.максСкорость, (Продавец.максСкорость - Продавец.минСкорость)/2);
        скоростьПродМашин.addChangeListener(new регПокупкиМашин());
        скоростьПродМашин.setMajorTickSpacing(Продавец.максСкорость / 10);
        скоростьПродМашин.setPaintTicks(true);
        скоростьПродМашин.setLabelTable( метки1 );
        скоростьПродМашин.setPaintLabels(true);

        JPanel главнаяПанель = new JPanel();
        главнаяПанель.setLayout(new GridBagLayout());
        GridBagConstraints с = new GridBagConstraints();
        с.gridx = 0;
        с.gridy = 0;
        с.ipady = 30;
        JLabel состояние = new JLabel(" Состояние ");
        состояние.setFont(оченьБольшойШрифт);
        главнаяПанель.add(состояние, с);
        с.gridx = 0;
        с.gridy = 1;
        с.ipady = 30;
        JLabel поставка = new JLabel(" Поставка: ");
        поставка.setFont(большойШрифт);
        главнаяПанель.add(поставка, с);
        с.gridx = 0;
        с.gridy = 2;
        с.ipady = 0;
        главнаяПанель.add(панельПоставки, с);
        с.gridx = 0;
        с.gridy = 3;
        с.ipady = 30;
        JLabel складыДеталей = new JLabel(" Склады деталей: ");
        складыДеталей.setFont(большойШрифт);
        главнаяПанель.add(складыДеталей, с);
        с.gridx = 0;
        с.gridy = 4;
        с.ipady = 0;
        главнаяПанель.add(панельСкладовДеталей, с);
        с.gridx = 0;
        с.gridy = 5;
        с.ipady = 30;
        JLabel сборка = new JLabel(" Сборка: ");
        сборка.setFont(большойШрифт);
        главнаяПанель.add(сборка, с);
        с.gridx = 0;
        с.gridy = 6;
        с.ipady = 0;
        главнаяПанель.add(панельСборки, с);
        с.gridx = 0;
        с.gridy = 7;
        с.ipady = 30;
        JLabel складМашин = new JLabel(" Склад машин: ");
        складМашин.setFont(большойШрифт);
        главнаяПанель.add(складМашин, с);
        с.gridx = 0;
        с.gridy = 8;
        с.ipady = 0;
        главнаяПанель.add(панельСкладаМашин, с);
        с.gridx = 0;
        с.gridy = 9;
        с.ipady = 30;
        JLabel продажа = new JLabel(" Продажа: ");
        продажа.setFont(большойШрифт);
        главнаяПанель.add(продажа, с);
        с.gridx = 0;
        с.gridy = 10;
        с.ipady = 0;
        главнаяПанель.add(панельПродажи, с);
        JLabel модель = new JLabel(" Модель ");
        модель.setFont(оченьБольшойШрифт);
        с.gridx = 1;
        с.gridy = 0;
        главнаяПанель.add(модель, с);
        ImageIcon заставка = new ImageIcon("Фабрика/фабрика.png");
        JLabel фон = new JLabel();
        фон.setIcon(заставка);
        с.gridx = 1;
        с.gridy = 1;
        с.gridheight = 10;
        главнаяПанель.add(фон, с);
        JLabel управление = new JLabel(" Управление ");
        управление.setFont(оченьБольшойШрифт);
        с.gridx = 2;
        с.gridy = 0;
        с.ipadx = 70;
        с.gridheight = 1;
        главнаяПанель.add(управление, с);
        JLabel детали = new JLabel(" Детали (деталь / сек.) ");
        детали.setFont(большойШрифт);
        с.gridx = 2;
        с.gridy = 1;
        с.ipadx = 0;
        главнаяПанель.add(детали, с);
        JLabel регулировкаСкорПроизвМоторов = new JLabel(" Скорость производства моторов: ");
        регулировкаСкорПроизвМоторов.setFont(среднийШрифт);
        с.gridx = 2;
        с.gridy = 2;
        с.ipadx = 0;
        главнаяПанель.add(регулировкаСкорПроизвМоторов, с);
        с.gridx = 2;
        с.gridy = 3;
        с.ipadx = 70;
        главнаяПанель.add(скоростьПроизводстваМоторов, с);
        JLabel регулировкаСкорПроизвКузовов = new JLabel("Скорость производства кузовов");
        регулировкаСкорПроизвКузовов.setFont(среднийШрифт);
        с.gridx = 2;
        с.gridy = 4;
        с.ipadx = 0;
        главнаяПанель.add(регулировкаСкорПроизвКузовов, с);
        с.gridx = 2;
        с.gridy = 5;
        с.ipadx = 70;
        главнаяПанель.add(скоростьПроизводстваКузовов, с);
        JLabel регулировкаСкорПроизвАксессуаров = new JLabel(" Скорость производства аксессуаров: ");
        регулировкаСкорПроизвАксессуаров.setFont(среднийШрифт);
        с.gridx = 2;
        с.gridy = 6;
        с.ipadx = 0;
        главнаяПанель.add(регулировкаСкорПроизвАксессуаров, с);
        с.gridx = 2;
        с.gridy = 7;
        с.ipadx = 70;
        главнаяПанель.add(скоростьПроизводстваАксессуаров, с);
        JLabel продажаМашин = new JLabel(" Продажа (машина / сек.) ");
        продажаМашин.setFont(большойШрифт);
        с.gridx = 2;
        с.gridy = 8;
        с.ipadx = 0;
        главнаяПанель.add(продажаМашин, с);
        JLabel регулировкаСкорПродажиМашин = new JLabel(" Скорость продажи машин: ");
        регулировкаСкорПродажиМашин.setFont(среднийШрифт);
        с.gridx = 2;
        с.gridy = 9;
        с.ipadx = 0;
        главнаяПанель.add(регулировкаСкорПродажиМашин, с);
        с.gridx = 2;
        с.gridy = 10;
        с.ipadx = 70;
        главнаяПанель.add(скоростьПродМашин, с);

        /* Внутренний класс дря работы с локальными переменными метода */

        class СлужебныйКласс {
            public void изменитьСостояние() {
                поставщикиМоторов.setText(фабрика.получитьКоличествоПоставщиковМоторов());
                поставщикиКузовов.setText(фабрика.получитьКоличествоПоставщиковКузовов());
                поставщикиАксессуаров.setText(фабрика.получитьКоличествоПоставщиковАксессуаров());
                произведеноМоторов.setText(фабрика.получитьВсегоПроизведеноМоторов());
                произведеноКузовов.setText(фабрика.получитьВсегоПроизведеноКузовов());
                произведеноАксессуаров.setText(фабрика.получитьВсегоПроизведеноАксессуаров());
                скоростьПоставкиМоторов.setText(фабрика.получитьСкоростьПроизводстваМоторов());
                скоростьПоставкиКузовов.setText(фабрика.получитьСкоростьПроизводстваКузовов());
                скоростьПоставкиАксессуаров.setText(фабрика.получитьСкоростьПроизводстваАксессуаров());
                текущееКоличествоМоторов.setText(фабрика.получитьТекущееКоличествоМоторов());
                текущееКоличествоКузовов.setText(фабрика.получитьТекущееКоличествоКузовов());
                текущееКоличествоАксессуаров.setText(фабрика.получитьТекущееКоличествоАксессуаров());
                максимальноеКоличествоМоторов.setText(фабрика.получитьМаксимальноеКоличествоМоторов());
                максимальноеКоличествоКузовов.setText(фабрика.получитьМаксимальноеКоличествоКузовов());
                максимальноеКоличествоАксессуаров.setText(фабрика.получитьМаксимальноеКоличествоАксессуаров());
                сборщики.setText(фабрика.получитьКоличествоСборщиков());
                всегоПроизведеноМашин.setText(фабрика.получитьВсегоПроизведеноМашин());
                текущееКоличествоМашин.setText(фабрика.получитьТекущееКоличествоМашин());
                максимальноеКоличествоМашин.setText(фабрика.получитьМаксимальноеКоличествоМашин());
                количествоПродавцов.setText(фабрика.получитьКоличествоПродавцов());
                проданоМашин.setText(фабрика.получитьВсегоПроданоМашин());
                скоростьПродажиМашин.setText(фабрика.получитьСкоростьПродажиМашин());
            }
        }

        СлужебныйКласс служ = new СлужебныйКласс();
        служ.изменитьСостояние();


        frame = new JFrame("Фабрика");
        frame.setPreferredSize(new Dimension(1700, 800));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.add(главнаяПанель);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);

        while(true) {
            служ.изменитьСостояние();
        }
    }

    public void перерисовать() {
        панельПоставки.paintImmediately(0,0,600,600);
    }


    private class регПроизвМоторов implements ChangeListener {
        public void stateChanged(ChangeEvent e) {
            JSlider ползунок = (JSlider)e.getSource();
            if (!ползунок.getValueIsAdjusting()) {
                int скорость = (int)ползунок.getValue();
                фабрика.установитьСкоростьПроизводстваМоторов(скорость);
            }
        }
    }

    private class регПроизвКузовов implements ChangeListener {
        public void stateChanged(ChangeEvent e) {
            JSlider ползунок = (JSlider)e.getSource();
            if (!ползунок.getValueIsAdjusting()) {
                int скорость = (int)ползунок.getValue();
                фабрика.установитьСкоростьПроизводстваКузовов(скорость);
            }
        }
    }

    private class регПроизвАксессуаров implements ChangeListener {
        public void stateChanged(ChangeEvent e) {
            JSlider ползунок = (JSlider)e.getSource();
            if (!ползунок.getValueIsAdjusting()) {
                int скорость = (int)ползунок.getValue();
                фабрика.установитьСкоростьПроизводстваАксессуаров(скорость);
            }
        }
    }

    private class регПокупкиМашин implements ChangeListener {
        public void stateChanged(ChangeEvent e) {
            JSlider ползунок = (JSlider)e.getSource();
            if (!ползунок.getValueIsAdjusting()) {
                int скорость = (int)ползунок.getValue();
                фабрика.установитьСкоростьПокупкиМашин(скорость);
            }
        }
    }
}
